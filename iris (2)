{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"iris","provenance":[{"file_id":"1_JqfIi2LCou-n_q2RTXncS3gFhKkbpTg","timestamp":1635703847742}],"authorship_tag":"ABX9TyOBfxTg5ZZntbth5APRxIhH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3u5ABsocUY0G","executionInfo":{"status":"ok","timestamp":1635756029006,"user_tz":-330,"elapsed":403,"user":{"displayName":"raju chaudhari","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08663039910286170237"}},"outputId":"473b7d1e-4ee8-460e-d7de-b79dba6070ba"},"source":["import pandas as pd \n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","%matplotlib inline\n","\n","iris_data = pd.read_csv(\"../content/IRIS.csv\")\n","print(\"****************\")\n","print(f\"shape of the dataset :- {iris_data.shape}\")\n","print(\"\\n***********\\n\")\n","print(f\"Sample Dataset :- \\n{iris_data.head()}\")\n","print(\"\\n***********\\n\")\n","print(f\"Checking for whether null values present or not :- \\n{iris_data.isnull().sum()}\")\n","print(f\"Duplicate values :- {len(iris_data.loc[iris_data.duplicated()])}\")\n","iris_data = iris_data.drop_duplicates()\n","print(\"\\n***********\\n\")\n","print(f\"Target value counts :- \\n {iris_data['species'].value_counts()}\")"],"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["****************\n","shape of the dataset :- (150, 5)\n","\n","***********\n","\n","Sample Dataset :- \n","   sepal_length  sepal_width  petal_length  petal_width      species\n","0           5.1          3.5           1.4          0.2  Iris-setosa\n","1           4.9          3.0           1.4          0.2  Iris-setosa\n","2           4.7          3.2           1.3          0.2  Iris-setosa\n","3           4.6          3.1           1.5          0.2  Iris-setosa\n","4           5.0          3.6           1.4          0.2  Iris-setosa\n","\n","***********\n","\n","Checking for whether null values present or not :- \n","sepal_length    0\n","sepal_width     0\n","petal_length    0\n","petal_width     0\n","species         0\n","dtype: int64\n","Duplicate values :- 3\n","\n","***********\n","\n","Target value counts :- \n"," Iris-versicolor    50\n","Iris-virginica     49\n","Iris-setosa        48\n","Name: species, dtype: int64\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":350},"id":"VsbDZMTFZ1qM","executionInfo":{"status":"ok","timestamp":1635756030343,"user_tz":-330,"elapsed":942,"user":{"displayName":"raju chaudhari","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08663039910286170237"}},"outputId":"fc9f9917-7082-4e7b-e0ee-3b158aabfad1"},"source":["sns.countplot(iris_data['species'])"],"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f98a4e17b50>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"F9VquJ3NccE7","executionInfo":{"status":"ok","timestamp":1635756030344,"user_tz":-330,"elapsed":48,"user":{"displayName":"raju chaudhari","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08663039910286170237"}},"outputId":"b1889862-f341-4119-e84b-e1ad5c9f57ff"},"source":["sns.heatmap(iris_data.corr(), annot=True, annot_kws={'size' :20})"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f989c54d5d0>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"uHIVHnQ9gwlN","executionInfo":{"status":"ok","timestamp":1635756030345,"user_tz":-330,"elapsed":45,"user":{"displayName":"raju chaudhari","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08663039910286170237"}}},"source":[""],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qvmXQCtPddwk","executionInfo":{"status":"ok","timestamp":1635756030345,"user_tz":-330,"elapsed":44,"user":{"displayName":"raju chaudhari","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08663039910286170237"}},"outputId":"86178c9f-71df-4430-9796-4f9ef365ddcd"},"source":["X = iris_data.drop(['species'], axis=1)\n","y = iris_data['species']\n","pipe_line = Pipeline([('std_scaler',StandardScaler())])\n","X = pipe_line.fit_transform(X)\n","label_encode = LabelEncoder()\n","y = label_encode.fit_transform(y)\n","print(f\"Labels list from label encoder :- {list(label_encode.classes_)}\")\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42) \n","print(f\"Size Of The Train Dataset :-{len(X_train)}\")\n","print(f\"Size Of The Test Dataset :-{len(X_test)}\")"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Labels list from label encoder :- ['Iris-setosa', 'Iris-versicolor', 'Iris-virginica']\n","Size Of The Train Dataset :-132\n","Size Of The Test Dataset :-15\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zdP7H3YbioSg","executionInfo":{"status":"ok","timestamp":1635756030347,"user_tz":-330,"elapsed":43,"user":{"displayName":"raju chaudhari","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08663039910286170237"}},"outputId":"dd5adf04-3820-45ea-d5a0-e9de0edef592"},"source":["svc_clf = SVC(C=0.5, kernel='linear')\n","svc_clf.fit(X_train, y_train)\n","predict_result = svc_clf.predict(X_test)\n","accuracy = accuracy_score(y_test, predict_result)\n","print(f\"Iris Classification Accuracy :- {accuracy}\\n)\")\n","Confusion_matric = confusion_matrix(y_test, predict_result)\n","print(f\"Confusion matrix :- \\n {Confusion_matric}\\n\")\n","clf_report = classification_report(y_test, predict_result)\n","print(f\"Classification Report :- \\n{clf_report}\")"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Iris Classification Accuracy :- 0.9333333333333333\n",")\n","Confusion matrix :- \n"," [[5 0 0]\n"," [0 4 1]\n"," [0 0 5]]\n","\n","Classification Report :- \n","              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         5\n","           1       1.00      0.80      0.89         5\n","           2       0.83      1.00      0.91         5\n","\n","    accuracy                           0.93        15\n","   macro avg       0.94      0.93      0.93        15\n","weighted avg       0.94      0.93      0.93        15\n","\n"]}]}]}